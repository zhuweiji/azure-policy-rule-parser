{
    "description": "Configures flow log for specific network security group. It will allow to log information about IP traffic flowing through an network security group. Flow log helps to identify unknown or undesired traffic, verify network isolation and compliance with enterprise access rules, analyze network flows from compromised IPs and network interfaces.",
    "displayName": "Deploy a flow log resource with target network security group",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/0db34a60-64f4-4bf6-bd44-f95c16cf34b9",
    "metadata": {
        "category": "Network",
        "version": "1.1.0"
    },
    "mode": "Indexed",
    "name": "0db34a60-64f4-4bf6-bd44-f95c16cf34b9",
    "parameters": {
        "networkWatcherName": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "The name of the network watcher under which the flowLog resources will be created. Make sure it belongs to the same region as the NSG.",
                "displayName": "Network Watcher name",
                "strongType": null
            },
            "type": "String"
        },
        "networkWatcherRG": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "The name of the resource group where the flowLog resources will be created. This will be used only if a deployment is required. This is the resource group where the Network Watchers are located.",
                "displayName": "Network Watchers RG",
                "strongType": "existingResourceGroups"
            },
            "type": "String"
        },
        "nsgRegion": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "This Policy will review NSGs only in the selected region. You can create other assignments to include other regions.",
                "displayName": "NSG Region",
                "strongType": "location"
            },
            "type": "String"
        },
        "storageId": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": true,
                "description": "A string with the storage id for the flowlogs to be sent to. It will be used for deployment purposes only. Make sure this storage account is located in the same region as the NSG. The format must be: '/subscriptions/{subscription id}/resourceGroups/{resourceGroup name}/providers/Microsoft.Storage/storageAccounts/{storage account name}",
                "displayName": "Storage id",
                "strongType": null
            },
            "type": "String"
        }
    },
    "policyRule": {
        "if": {
            "allOf": [
                {
                    "equals": "Microsoft.Network/networkSecurityGroups",
                    "field": "type"
                },
                {
                    "equals": "[parameters('nsgRegion')]",
                    "field": "location"
                }
            ]
        },
        "then": {
            "details": {
                "deployment": {
                    "properties": {
                        "mode": "incremental",
                        "parameters": {
                            "flowlogName": {
                                "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), concat(take(concat(field('name'), '-', resourceGroup().name), 72), '-', 'flowlog'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10])]"
                            },
                            "location": {
                                "value": "[field('location')]"
                            },
                            "networkWatcherName": {
                                "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherName'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8])]"
                            },
                            "networkWatcherRG": {
                                "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherRG'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]"
                            },
                            "storageId": {
                                "value": "[parameters('storageId')]"
                            },
                            "targetResource": {
                                "value": "[concat(resourceGroup().id, '/providers/Microsoft.Network/networkSecurityGroups/', field('name'))]"
                            }
                        },
                        "template": {
                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "flowlogName": {
                                    "type": "String"
                                },
                                "location": {
                                    "type": "String"
                                },
                                "networkWatcherName": {
                                    "type": "String"
                                },
                                "networkWatcherRG": {
                                    "type": "String"
                                },
                                "storageId": {
                                    "type": "String"
                                },
                                "targetResource": {
                                    "type": "string"
                                }
                            },
                            "resources": [
                                {
                                    "apiVersion": "2019-10-01",
                                    "name": "[concat('flowlogDeployment-', uniqueString(parameters('flowlogName')))]",
                                    "properties": {
                                        "mode": "incremental",
                                        "parameters": {},
                                        "template": {
                                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {},
                                            "resources": [
                                                {
                                                    "apiVersion": "2019-11-01",
                                                    "location": "[parameters('location')]",
                                                    "name": "[concat(parameters('networkWatcherName'), '/', parameters('flowlogName'))]",
                                                    "properties": {
                                                        "enabled": "true",
                                                        "retentionPolicy": {
                                                            "days": "0",
                                                            "enabled": "false"
                                                        },
                                                        "storageId": "[parameters('storageId')]",
                                                        "targetResourceId": "[parameters('targetResource')]"
                                                    },
                                                    "type": "Microsoft.Network/networkWatchers/flowLogs"
                                                }
                                            ]
                                        }
                                    },
                                    "resourceGroup": "[parameters('networkWatcherRG')]",
                                    "type": "Microsoft.Resources/deployments"
                                }
                            ]
                        }
                    }
                },
                "existenceCondition": {
                    "allOf": [
                        {
                            "equals": "true",
                            "field": "Microsoft.Network/networkWatchers/flowLogs/enabled"
                        },
                        {
                            "equals": "[parameters('storageId')]",
                            "field": "Microsoft.Network/networkWatchers/flowLogs/storageId"
                        }
                    ]
                },
                "name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
                "resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherRG'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
                "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                ],
                "type": "Microsoft.Network/networkWatchers/flowlogs"
            },
            "effect": "deployIfNotExists"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}