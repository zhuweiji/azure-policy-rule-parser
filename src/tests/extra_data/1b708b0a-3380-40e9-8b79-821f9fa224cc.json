{
    "description": "Disabling command invoke can enhance the security by rejecting invoke-command access to the cluster",
    "displayName": "Disable Command Invoke on Azure Kubernetes Service clusters",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/1b708b0a-3380-40e9-8b79-821f9fa224cc",
    "metadata": {
        "category": "Kubernetes",
        "version": "1.2.0"
    },
    "mode": "Indexed",
    "name": "1b708b0a-3380-40e9-8b79-821f9fa224cc",
    "parameters": {
        "effect": {
            "allowedValues": [
                "DeployIfNotExists",
                "Disabled"
            ],
            "defaultValue": "DeployIfNotExists",
            "metadata": {
                "assignPermissions": null,
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect",
                "portalReview": true,
                "strongType": null
            },
            "type": "String"
        }
    },
    "policyRule": {
        "if": {
            "equals": "Microsoft.ContainerService/managedClusters",
            "field": "type"
        },
        "then": {
            "details": {
                "deployment": {
                    "properties": {
                        "mode": "incremental",
                        "parameters": {
                            "clusterName": {
                                "value": "[field('name')]"
                            },
                            "clusterResourceGroupName": {
                                "value": "[resourceGroup().name]"
                            }
                        },
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "clusterName": {
                                    "type": "string"
                                },
                                "clusterResourceGroupName": {
                                    "type": "string"
                                }
                            },
                            "resources": [
                                {
                                    "apiVersion": "2020-06-01",
                                    "name": "[variables('clusterGetDeploymentName')]",
                                    "properties": {
                                        "mode": "Incremental",
                                        "template": {
                                            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "outputs": {
                                                "aksCluster": {
                                                    "type": "object",
                                                    "value": "[reference(resourceId(parameters('clusterResourceGroupName'), 'Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2023-11-01', 'Full')]"
                                                }
                                            },
                                            "resources": []
                                        }
                                    },
                                    "type": "Microsoft.Resources/deployments"
                                },
                                {
                                    "apiVersion": "2020-06-01",
                                    "name": "[variables('clusterUpdateDeploymentName')]",
                                    "properties": {
                                        "expressionEvaluationOptions": {
                                            "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                            "aksClusterContent": {
                                                "value": "[reference(variables('clusterGetDeploymentName')).outputs.aksCluster.value]"
                                            },
                                            "aksClusterName": {
                                                "value": "[parameters('clusterName')]"
                                            }
                                        },
                                        "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "outputs": {},
                                            "parameters": {
                                                "aksClusterContent": {
                                                    "type": "object"
                                                },
                                                "aksClusterName": {
                                                    "type": "string"
                                                }
                                            },
                                            "resources": [
                                                {
                                                    "apiVersion": "2023-11-01",
                                                    "location": "[parameters('aksClusterContent').location]",
                                                    "name": "[parameters('aksClusterName')]",
                                                    "properties": {
                                                        "aadProfile": "[if(contains(parameters('aksClusterContent').properties, 'aadProfile'), parameters('aksClusterContent').properties.aadProfile, json('null'))]",
                                                        "apiServerAccessProfile": {
                                                            "disableRunCommand": true
                                                        },
                                                        "autoScalerProfile": "[if(contains(parameters('aksClusterContent').properties, 'autoScalerProfile'), parameters('aksClusterContent').properties.autoScalerProfile, json('null'))]",
                                                        "autoUpgradeProfile": "[if(contains(parameters('aksClusterContent').properties, 'autoUpgradeProfile'), parameters('aksClusterContent').properties.autoUpgradeProfile, json('null'))]",
                                                        "azureMonitorProfile": "[if(contains(parameters('aksClusterContent').properties, 'azureMonitorProfile'), parameters('aksClusterContent').properties.azureMonitorProfile, json('null'))]",
                                                        "disableLocalAccounts": "[if(contains(parameters('aksClusterContent').properties, 'disableLocalAccounts'), parameters('aksClusterContent').properties.disableLocalAccounts, json('null'))]",
                                                        "diskEncryptionSetID": "[if(contains(parameters('aksClusterContent').properties, 'diskEncryptionSetID'), parameters('aksClusterContent').properties.diskEncryptionSetID, json('null'))]",
                                                        "enablePodSecurityPolicy": "[if(contains(parameters('aksClusterContent').properties, 'enablePodSecurityPolicy'), parameters('aksClusterContent').properties.enablePodSecurityPolicy, json('null'))]",
                                                        "enableRBAC": "[if(contains(parameters('aksClusterContent').properties, 'enableRBAC'), parameters('aksClusterContent').properties.enableRBAC, json('null'))]",
                                                        "fqdnSubdomain": "[if(contains(parameters('aksClusterContent').properties, 'fqdnSubdomain'), parameters('aksClusterContent').properties.fqdnSubdomain, json('null'))]",
                                                        "httpProxyConfig": "[if(contains(parameters('aksClusterContent').properties, 'httpProxyConfig'), parameters('aksClusterContent').properties.httpProxyConfig, json('null'))]",
                                                        "identityProfile": "[if(contains(parameters('aksClusterContent').properties, 'identityProfile'), parameters('aksClusterContent').properties.identityProfile, json('null'))]",
                                                        "kubernetesVersion": "[parameters('aksClusterContent').properties.kubernetesVersion]",
                                                        "linuxProfile": "[if(contains(parameters('aksClusterContent').properties, 'linuxProfile'), parameters('aksClusterContent').properties.linuxProfile, json('null'))]",
                                                        "networkProfile": "[if(contains(parameters('aksClusterContent').properties, 'networkProfile'), parameters('aksClusterContent').properties.networkProfile, json('null'))]",
                                                        "nodeResourceGroup": "[parameters('aksClusterContent').properties.nodeResourceGroup]",
                                                        "oidcIssuerProfile": "[if(contains(parameters('aksClusterContent').properties, 'oidcIssuerProfile'), parameters('aksClusterContent').properties.oidcIssuerProfile, json('null'))]",
                                                        "podIdentityProfile": "[if(contains(parameters('aksClusterContent').properties, 'podIdentityProfile'), parameters('aksClusterContent').properties.podIdentityProfile, json('null'))]",
                                                        "privateLinkResources": "[if(contains(parameters('aksClusterContent').properties, 'privateLinkResources'), parameters('aksClusterContent').properties.privateLinkResources, json('null'))]",
                                                        "publicNetworkAccess": "[if(contains(parameters('aksClusterContent').properties, 'publicNetworkAccess'), parameters('aksClusterContent').properties.publicNetworkAccess, json('null'))]",
                                                        "serviceMeshProfile": "[if(contains(parameters('aksClusterContent').properties, 'serviceMeshProfile'), parameters('aksClusterContent').properties.serviceMeshProfile, json('null'))]",
                                                        "servicePrincipalProfile": "[if(contains(parameters('aksClusterContent').properties, 'servicePrincipalProfile'), parameters('aksClusterContent').properties.servicePrincipalProfile, json('null'))]",
                                                        "storageProfile": "[if(contains(parameters('aksClusterContent').properties, 'storageProfile'), parameters('aksClusterContent').properties.storageProfile, json('null'))]",
                                                        "supportPlan": "[if(contains(parameters('aksClusterContent').properties, 'supportPlan'), parameters('aksClusterContent').properties.supportPlan, json('null'))]",
                                                        "upgradeSettings": "[if(contains(parameters('aksClusterContent').properties, 'upgradeSettings'), parameters('aksClusterContent').properties.upgradeSettings, json('null'))]",
                                                        "windowsProfile": "[if(contains(parameters('aksClusterContent').properties, 'windowsProfile'), parameters('aksClusterContent').properties.windowsProfile, json('null'))]",
                                                        "workloadAutoScalerProfile": "[if(contains(parameters('aksClusterContent').properties, 'workloadAutoScalerProfile'), parameters('aksClusterContent').properties.workloadAutoScalerProfile, json('null'))]"
                                                    },
                                                    "sku": "[parameters('aksClusterContent').sku]",
                                                    "tags": "[if(contains(parameters('aksClusterContent'), 'tags'), parameters('aksClusterContent').tags, json('null'))]",
                                                    "type": "Microsoft.ContainerService/managedClusters"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "Microsoft.Resources/deployments"
                                }
                            ],
                            "variables": {
                                "clusterGetDeploymentName": "[take(concat('Policy-Get-', parameters('clusterName')), 64)]",
                                "clusterUpdateDeploymentName": "[take(concat('Policy-Update-', parameters('clusterName')), 64)]"
                            }
                        }
                    }
                },
                "existenceCondition": {
                    "equals": true,
                    "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.disableRunCommand"
                },
                "name": "[field('name')]",
                "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
                    "/providers/Microsoft.Authorization/roleDefinitions/18ed5180-3e48-46fd-8541-4ea054d57064"
                ],
                "type": "Microsoft.ContainerService/managedClusters"
            },
            "effect": "[parameters('effect')]"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}