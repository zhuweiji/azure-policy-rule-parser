{
    "description": "Enforce backup for blobs on all storage accounts that contain a given tag to a central backup vault. Doing this can help you manage backup of blobs contained across multiple storage accounts at scale. For more details, refer to https://aka.ms/AB-BlobBackupAzPolicies",
    "displayName": "[Preview]: Configure backup for blobs on storage accounts with a given tag to an existing backup vault in the same region",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/615b01c4-d565-4f6f-8c6e-d130268e3a1a",
    "metadata": {
        "category": "Backup",
        "preview": true,
        "version": "2.0.0-preview"
    },
    "mode": "Indexed",
    "name": "615b01c4-d565-4f6f-8c6e-d130268e3a1a",
    "parameters": {
        "backupPolicyId": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Specify the ID of the backup policy to be used for configuring backup for blobs. The selected Azure Backup policy should be of type Azure Blobs (Azure Storage). This policy needs to be in a vault that is present in the location chosen above. For example - /subscriptions/<SubscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.DataProtection/vaults/<VaultName>/backupPolicies/<BackupPolicyName>. Also, make sure that this Backup vault's managed identity has the Storage Account Backup Contributor role assigned on the storage accounts for which backup is to be configured.",
                "displayName": "Backup Policy (of type Azure Blobs (Azure Storage) from a vault in the location chosen above)",
                "strongType": null
            },
            "type": "String"
        },
        "effect": {
            "allowedValues": [
                "DeployIfNotExists",
                "AuditIfNotExists",
                "Disabled"
            ],
            "defaultValue": "DeployIfNotExists",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect",
                "strongType": null
            },
            "type": "String"
        },
        "inclusionTagName": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Name of the tag to use for including storage accounts in the scope of this policy. This should be used along with the Inclusion Tag Value parameter. Learn more at https://aka.ms/AB-BlobBackupAzPolicies",
                "displayName": "Inclusion Tag Name",
                "strongType": null
            },
            "type": "String"
        },
        "inclusionTagValues": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Value of the tag to use for including storage accounts in the scope of this policy (in case of multiple values, use a comma-separated list). This should be used along with the Inclusion Tag Name parameter. Learn more at https://aka.ms/AB-BlobBackupAzPolicies.",
                "displayName": "Inclusion Tag Values",
                "strongType": null
            },
            "type": "Array"
        },
        "vaultLocation": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Specify the location of the storage accounts that you want to protect. Blobs in the storage accounts should be backed up to a vault in the same location. For example - CanadaCentral",
                "displayName": "Location (Specify the location of the storage accounts that you want to protect)",
                "strongType": "location"
            },
            "type": "String"
        }
    },
    "policyRule": {
        "if": {
            "allOf": [
                {
                    "equals": "Microsoft.Storage/StorageAccounts",
                    "field": "type"
                },
                {
                    "field": "[concat('tags[', parameters('inclusionTagName'), ']')]",
                    "in": "[parameters('inclusionTagValues')]"
                },
                {
                    "equals": "StorageV2",
                    "field": "kind"
                },
                {
                    "contains": "Standard",
                    "field": "Microsoft.Storage/storageAccounts/sku.name"
                },
                {
                    "field": "Microsoft.Storage/storageAccounts/isHnsEnabled",
                    "notEquals": "true"
                },
                {
                    "field": "Microsoft.Storage/storageAccounts/isNfsV3Enabled",
                    "notEquals": "true"
                },
                {
                    "equals": "[parameters('vaultLocation')]",
                    "field": "location"
                }
            ]
        },
        "then": {
            "details": {
                "deployment": {
                    "properties": {
                        "mode": "incremental",
                        "parameters": {
                            "backupPolicyId": {
                                "value": "[parameters('backupPolicyId')]"
                            },
                            "location": {
                                "value": "[field('location')]"
                            },
                            "storageAccountResourceId": {
                                "value": "[field('id')]"
                            }
                        },
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "backupPolicyId": {
                                    "metadata": {
                                        "description": "Backup Policy Id"
                                    },
                                    "type": "string"
                                },
                                "location": {
                                    "metadata": {
                                        "description": "Location for all resources"
                                    },
                                    "type": "string"
                                },
                                "storageAccountResourceId": {
                                    "metadata": {
                                        "description": "ResourceId of the Storage Account"
                                    },
                                    "type": "string"
                                }
                            },
                            "resources": [
                                {
                                    "apiVersion": "2021-04-01",
                                    "name": "[concat('DeployProtection-',uniqueString(variables('storageAccountName')))]",
                                    "properties": {
                                        "mode": "Incremental",
                                        "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {},
                                            "resources": [
                                                {
                                                    "apiVersion": "2021-01-01",
                                                    "name": "[concat(variables('vaultName'), '/', variables('storageAccountName'))]",
                                                    "properties": {
                                                        "dataSourceInfo": {
                                                            "datasourceType": "[variables('dataSourceType')]",
                                                            "objectType": "Datasource",
                                                            "resourceID": "[parameters('storageAccountResourceId')]",
                                                            "resourceLocation": "[parameters('location')]",
                                                            "resourceName": "[variables('storageAccountName')]",
                                                            "resourceType": "[variables('resourceType')]",
                                                            "resourceUri": "[parameters('storageAccountResourceId')]"
                                                        },
                                                        "objectType": "BackupInstance",
                                                        "policyInfo": {
                                                            "name": "[variables('backupPolicyName')]",
                                                            "policyId": "[parameters('backupPolicyId')]"
                                                        }
                                                    },
                                                    "type": "Microsoft.DataProtection/backupvaults/backupInstances"
                                                }
                                            ]
                                        }
                                    },
                                    "resourceGroup": "[variables('vaultResourceGroup')]",
                                    "subscriptionId": "[variables('vaultSubscriptionId')]",
                                    "type": "Microsoft.Resources/deployments"
                                }
                            ],
                            "variables": {
                                "backupPolicyName": "[first(skip(split(parameters('backupPolicyId'), '/'), 10))]",
                                "dataSourceType": "Microsoft.Storage/storageAccounts/blobServices",
                                "resourceType": "Microsoft.Storage/storageAccounts",
                                "storageAccountName": "[first(skip(split(parameters('storageAccountResourceId'), '/'), 8))]",
                                "vaultName": "[first(skip(split(parameters('backupPolicyId'), '/'), 8))]",
                                "vaultResourceGroup": "[first(skip(split(parameters('backupPolicyId'), '/'), 4))]",
                                "vaultSubscriptionId": "[first(skip(split(parameters('backupPolicyId'), '/'), 2))]"
                            }
                        }
                    }
                },
                "existenceCondition": {
                    "equals": true,
                    "field": "Microsoft.Storage/storageAccounts/blobServices/default.restorePolicy.enabled"
                },
                "name": "default",
                "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
                ],
                "type": "Microsoft.Storage/storageAccounts/blobServices"
            },
            "effect": "[parameters('effect')]"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}