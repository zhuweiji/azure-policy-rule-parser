{
    "description": "Provide code signing for training code in specified Azure Machine Learning computes and can be assigned at the workspace. For more information, visit https://aka.ms/amlpolicydoc.",
    "displayName": "[Preview]: Configure code signing for training code for specified Azure Machine Learning computes",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/6a6f7384-63de-11ea-bc55-0242ac130003",
    "metadata": {
        "category": "Machine Learning",
        "preview": true,
        "version": "6.4.0-preview"
    },
    "mode": "Microsoft.MachineLearningServices.Data",
    "name": "6a6f7384-63de-11ea-bc55-0242ac130003",
    "parameters": {
        "computeNames": {
            "allowedValues": null,
            "defaultValue": [],
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "List of compute names where this policy should be applied. Example: 'cpu-cluster;gpu-cluster'. If no value is provided to this parameter, policy is applicable to all computes.",
                "displayName": "Compute names where Azure Machine Learning jobs run",
                "strongType": null
            },
            "type": "Array"
        },
        "computeType": {
            "allowedValues": [
                "MachineLearningCompute",
                "AzureDataFactory",
                "HDInsight",
                "SynapseSpark",
                "ComputeInstance",
                "ManagedEndpoint",
                "Singularity",
                "Automatic",
                "Any"
            ],
            "defaultValue": "Any",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Compute type name. If Any is selected, the policy is applicable to any compute types.",
                "displayName": "Compute type for the compute where Azure ML jobs run",
                "strongType": null
            },
            "type": "String"
        },
        "effect": {
            "allowedValues": [
                "enforceSetting",
                "disabled"
            ],
            "defaultValue": "enforceSetting",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Enable or disable the execution of the policy.",
                "displayName": "Effect",
                "strongType": null
            },
            "type": "String"
        },
        "isIsolatedNetwork": {
            "allowedValues": [
                "Yes",
                "No",
                "Any"
            ],
            "defaultValue": "Any",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Only applicable for MachineLearningCompute type. \"Yes: apply the policy to computes in isolated network\". \"No: apply the policy to computes that are out of isolated network\". \"Any: apply the policy regardless of if the compute is in isolated network or not\". If compute type is not MachineLearningCompute, the value set for this parameter will be ignored.",
                "displayName": "Is the compute in isolated network",
                "strongType": null
            },
            "type": "String"
        },
        "optionalSecondSigningKey": {
            "allowedValues": null,
            "defaultValue": "",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Public key text in PGP public key format, with newline characters encoded as string literals \"\\r\" and \"\\n\". This is another allowed signing key that is used only for the special case of Aether module import into Azure Machine Learning.",
                "displayName": "Second PGP public key",
                "strongType": null
            },
            "type": "String"
        },
        "signingKey": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Public key text in PGP public key format, with newline characters encoded as string literals \"\\r\" and \"\\n\".",
                "displayName": "PGP public key",
                "strongType": null
            },
            "type": "String"
        },
        "tags": {
            "allowedValues": null,
            "defaultValue": [],
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Assign a list of tags to match with the tags provided with the compute in the job. The policy is applied only if all tags match {e.g. [ \"tagKey:tagValue\", ... ]",
                "displayName": "Tags applied to compute",
                "strongType": null
            },
            "type": "Array"
        },
        "trustIPProtectedComponent": {
            "allowedValues": [
                "Yes",
                "No",
                "None"
            ],
            "defaultValue": "None",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "\"Yes: Honor component IP protected validation result\". \"No: Do not honor component IP protected validation result\". \"None: Apply the policy regardless it is IP Protected job or not\".",
                "displayName": "allow Intellectual Property Protected component job to run and honor component service validation result for IP Protected job",
                "strongType": null
            },
            "type": "String"
        }
    },
    "policyRule": {
        "if": {
            "allOf": [
                {
                    "anyOf": [
                        {
                            "field": "Microsoft.MachineLearningServices.Data/workspaces/computeName",
                            "in": "[parameters('computeNames')]"
                        },
                        {
                            "equals": 0,
                            "value": "[length(parameters('computeNames'))]"
                        }
                    ]
                },
                {
                    "anyOf": [
                        {
                            "equals": "Any",
                            "value": "[parameters('computeType')]"
                        },
                        {
                            "equals": "[parameters('computeType')]",
                            "field": "Microsoft.MachineLearningServices.Data/workspaces/computeType"
                        }
                    ]
                },
                {
                    "anyOf": [
                        {
                            "allOf": [
                                {
                                    "equals": "MachineLearningCompute",
                                    "field": "Microsoft.MachineLearningServices.Data/workspaces/computeType"
                                },
                                {
                                    "anyOf": [
                                        {
                                            "equals": "Any",
                                            "value": "[parameters('isIsolatedNetwork')]"
                                        },
                                        {
                                            "equals": "[parameters('isIsolatedNetwork')]",
                                            "field": "Microsoft.MachineLearningServices.Data/workspaces/isIsolatedNetwork"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "field": "Microsoft.MachineLearningServices.Data/workspaces/computeType",
                            "notEquals": "MachineLearningCompute"
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "anyOf": [
                                {
                                    "notEquals": 0,
                                    "value": "[length(parameters('tags'))]"
                                },
                                {
                                    "equals": 0,
                                    "value": "[length(field('Microsoft.MachineLearningServices.Data/workspaces/tags[*]'))]"
                                }
                            ]
                        },
                        {
                            "count": {
                                "field": "Microsoft.MachineLearningServices.Data/workspaces/tags[*]",
                                "where": {
                                    "field": "Microsoft.MachineLearningServices.Data/workspaces/tags[*]",
                                    "in": "[parameters('tags')]"
                                }
                            },
                            "equals": "[length(parameters('tags'))]"
                        }
                    ]
                }
            ]
        },
        "then": {
            "details": {
                "setting": {
                    "name": "signingKeys",
                    "value": {
                        "allowedList": "[createArray(parameters('signingKey'), parameters('optionalSecondSigningKey'))]",
                        "trustIPProtectedComponent": "[parameters('trustIPProtectedComponent')]"
                    }
                }
            },
            "effect": "[parameters('effect')]"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}