{
    "description": "Using system-assigned managed identity when communicating with data stores via linked services avoids the use of less secured credentials such as passwords or connection strings.",
    "displayName": "Azure Data Factory linked services should use system-assigned managed identity authentication when it is supported",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/f78ccdb4-7bf4-4106-8647-270491d2978a",
    "metadata": {
        "category": "Data Factory",
        "version": "2.1.0"
    },
    "mode": "All",
    "name": "f78ccdb4-7bf4-4106-8647-270491d2978a",
    "parameters": {
        "effect": {
            "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
            ],
            "defaultValue": "Audit",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect",
                "strongType": null
            },
            "type": "String"
        }
    },
    "policyRule": {
        "if": {
            "allOf": [
                {
                    "equals": "Microsoft.DataFactory/factories/linkedservices",
                    "field": "type"
                },
                {
                    "field": "Microsoft.DataFactory/factories/linkedservices/type",
                    "in": [
                        "AzureSqlDatabase",
                        "AzureSqlMI",
                        "AzureSqlDW",
                        "AzureBlobFS",
                        "AdlsGen2CosmosStructuredStream",
                        "AzureDataLakeStore",
                        "AzureDataLakeStoreCosmosStructuredStream",
                        "AzureBlobStorage",
                        "AzureDatabricks"
                    ]
                },
                {
                    "anyOf": [
                        {
                            "contains": "User ID=",
                            "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                        },
                        {
                            "contains": "AccountKey=",
                            "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                        },
                        {
                            "exists": "true",
                            "field": "Microsoft.DataFactory/factories/linkedservices/AzureSqlDW.typeProperties.servicePrincipalKey"
                        },
                        {
                            "exists": "true",
                            "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.accountKey"
                        },
                        {
                            "exists": "true",
                            "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.sasUri"
                        },
                        {
                            "exists": "true",
                            "field": "Microsoft.DataFactory/factories/linkedservices/Hubspot.typeProperties.accessToken"
                        },
                        {
                            "exists": "true",
                            "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.encryptedCredential"
                        },
                        {
                            "exists": "true",
                            "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.credential.type"
                        },
                        {
                            "exists": "true",
                            "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobFS.typeProperties.servicePrincipalCredential"
                        }
                    ]
                }
            ]
        },
        "then": {
            "effect": "[parameters('effect')]"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}