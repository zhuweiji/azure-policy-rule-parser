{
    "description": "Enable automation of Microsoft Defender for Cloud alerts. This policy deploys a workflow automation with your conditions and triggers on the assigned scope. To deploy this policy on newly created subscriptions, open the Compliance tab, select the relevant non-compliant assignment and create a remediation task.",
    "displayName": "Deploy Workflow Automation for Microsoft Defender for Cloud alerts",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/f1525828-9a90-4fcf-be48-268cdd02361e",
    "metadata": {
        "category": "Security Center",
        "version": "5.0.1"
    },
    "mode": "All",
    "name": "f1525828-9a90-4fcf-be48-268cdd02361e",
    "parameters": {
        "alertName": {
            "allowedValues": null,
            "defaultValue": "",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "String included in the required alert name. For a full reference list of Microsoft Defender for Cloud's alerts, see https://docs.microsoft.com/azure/security-center/alerts-reference.",
                "displayName": "Alert name contains",
                "strongType": null
            },
            "type": "String"
        },
        "alertSeverities": {
            "allowedValues": [
                "High",
                "Medium",
                "Low"
            ],
            "defaultValue": [
                "High",
                "Medium",
                "Low"
            ],
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Determines alert severities. Example: High;Medium;Low;",
                "displayName": "Alert severities",
                "strongType": null
            },
            "type": "Array"
        },
        "automationName": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "This is the automation name.",
                "displayName": "Automation name",
                "strongType": null
            },
            "type": "String"
        },
        "createResourceGroup": {
            "allowedValues": [
                true,
                false
            ],
            "defaultValue": true,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "If a resource group does not exists in the scope, a new resource group will be created. If the resource group exists and this flag is set to 'true' the policy will re-deploy the resource group. Please note this will reset any Azure Tag on the resource group.",
                "displayName": "Create resource group",
                "strongType": null
            },
            "type": "Boolean"
        },
        "logicAppResourceId": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": true,
                "description": "The Logic App that is triggered.",
                "displayName": "Logic App",
                "strongType": "Microsoft.Logic/workflows"
            },
            "type": "String"
        },
        "logicAppTrigger": {
            "allowedValues": [
                "Manual (Incoming HTTP request)",
                "When an Azure Security Center Alert is created or triggered"
            ],
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "The trigger connector of the logic app that is triggered. Possible values: 'Manual (Incoming HTTP request)', 'When an Azure Security Center Alert is created or triggered'.",
                "displayName": "Logic app trigger",
                "strongType": null
            },
            "type": "String"
        },
        "resourceGroupLocation": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "The location where the resource group and the workflow automation are created.",
                "displayName": "Resource group location",
                "strongType": "location"
            },
            "type": "String"
        },
        "resourceGroupName": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "The resource group name where the workflow automation is created. If you enter a name for a resource group that doesn't exist, it'll be created in the subscription.",
                "displayName": "Resource group name",
                "strongType": null
            },
            "type": "String"
        }
    },
    "policyRule": {
        "if": {
            "equals": "Microsoft.Resources/subscriptions",
            "field": "type"
        },
        "then": {
            "details": {
                "ResourceGroupName": "[parameters('resourceGroupName')]",
                "deployment": {
                    "location": "westeurope",
                    "properties": {
                        "mode": "incremental",
                        "parameters": {
                            "alertName": {
                                "value": "[parameters('alertName')]"
                            },
                            "alertSeverities": {
                                "value": "[parameters('alertSeverities')]"
                            },
                            "automationName": {
                                "value": "[parameters('automationName')]"
                            },
                            "createResourceGroup": {
                                "value": "[parameters('createResourceGroup')]"
                            },
                            "logicAppResourceId": {
                                "value": "[parameters('logicAppResourceId')]"
                            },
                            "logicAppTrigger": {
                                "value": "[parameters('logicAppTrigger')]"
                            },
                            "resourceGroupLocation": {
                                "value": "[parameters('resourceGroupLocation')]"
                            },
                            "resourceGroupName": {
                                "value": "[parameters('resourceGroupName')]"
                            }
                        },
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "alertName": {
                                    "type": "string"
                                },
                                "alertSeverities": {
                                    "type": "array"
                                },
                                "automationName": {
                                    "type": "string"
                                },
                                "createResourceGroup": {
                                    "type": "bool"
                                },
                                "guidValue": {
                                    "defaultValue": "[newGuid()]",
                                    "type": "string"
                                },
                                "logicAppResourceId": {
                                    "type": "string"
                                },
                                "logicAppTrigger": {
                                    "type": "string"
                                },
                                "resourceGroupLocation": {
                                    "type": "string"
                                },
                                "resourceGroupName": {
                                    "type": "string"
                                }
                            },
                            "resources": [
                                {
                                    "apiVersion": "2019-10-01",
                                    "condition": "[parameters('createResourceGroup')]",
                                    "location": "[parameters('resourceGroupLocation')]",
                                    "name": "[parameters('resourceGroupName')]",
                                    "type": "Microsoft.Resources/resourceGroups"
                                },
                                {
                                    "apiVersion": "2019-10-01",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Resources/resourceGroups/', parameters('resourceGroupName'))]"
                                    ],
                                    "name": "[concat('nestedAutomationDeployment', '_', parameters('guidValue'))]",
                                    "properties": {
                                        "mode": "Incremental",
                                        "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "parameters": {},
                                            "resources": [
                                                {
                                                    "apiVersion": "2019-01-01-preview",
                                                    "dependsOn": [],
                                                    "location": "[parameters('resourceGroupLocation')]",
                                                    "name": "[parameters('automationName')]",
                                                    "properties": {
                                                        "actions": [
                                                            {
                                                                "actionType": "LogicApp",
                                                                "logicAppResourceId": "[parameters('logicAppResourceId')]",
                                                                "uri": "[listCallbackUrl(concat(parameters('logicAppResourceId'), '/triggers/', variables('triggerMap')[parameters('logicAppTrigger')]),'2016-06-01').value]"
                                                            }
                                                        ],
                                                        "description": "Workflow Automation for Microsoft Defender for Cloud alerts via policy",
                                                        "isEnabled": true,
                                                        "scopes": [
                                                            {
                                                                "description": "[replace(variables('scopeDescription'),'{0}', subscription().subscriptionId)]",
                                                                "scopePath": "[subscription().id]"
                                                            }
                                                        ],
                                                        "sources": [
                                                            {
                                                                "copy": [
                                                                    {
                                                                        "count": "[variables('alertSeveritiesLengthIfEmpty')]",
                                                                        "input": {
                                                                            "rules": [
                                                                                {
                                                                                    "expectedValue": "[if(equals(parameters('alertName'), ''), '3.', parameters('alertName'))]",
                                                                                    "operator": "Contains",
                                                                                    "propertyJPath": "[if(equals(parameters('alertName'), ''), 'Version', 'AlertDisplayName')]",
                                                                                    "propertyType": "string"
                                                                                },
                                                                                {
                                                                                    "expectedValue": "[variables('severityMap')[parameters('alertSeverities')[mod(copyIndex('ruleSets'), variables('alertSeveritiesLengthIfEmpty'))]]]",
                                                                                    "operator": "Equals",
                                                                                    "propertyJPath": "Severity",
                                                                                    "propertyType": "string"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "name": "ruleSets"
                                                                    }
                                                                ],
                                                                "eventSource": "Alerts"
                                                            }
                                                        ]
                                                    },
                                                    "tags": {},
                                                    "type": "Microsoft.Security/automations"
                                                }
                                            ],
                                            "variables": {}
                                        }
                                    },
                                    "resourceGroup": "[parameters('resourceGroupName')]",
                                    "type": "Microsoft.Resources/deployments"
                                }
                            ],
                            "variables": {
                                "alertSeveritiesLength": "[length(parameters('alertSeverities'))]",
                                "alertSeveritiesLengthIfEmpty": "[if(equals(variables('alertSeveritiesLength'), 0), 1, variables('alertSeveritiesLength'))]",
                                "scopeDescription": "scope for subscription {0}",
                                "severityMap": {
                                    "High": "high",
                                    "Low": "low",
                                    "Medium": "medium"
                                },
                                "triggerMap": {
                                    "Manual (Incoming HTTP request)": "manual",
                                    "When an Azure Security Center Alert is created or triggered": "When_a_Microsoft_Defender_for_Cloud_alert_is_created_or_triggered"
                                }
                            }
                        }
                    }
                },
                "deploymentScope": "subscription",
                "existenceCondition": {
                    "allOf": [
                        {
                            "equals": true,
                            "field": "Microsoft.Security/automations/isEnabled"
                        },
                        {
                            "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].expectedValue",
                            "in": "[union(parameters('alertSeverities'),if(equals(parameters('alertName'), ''), array('3.'), array(parameters('alertName'))))]"
                        },
                        {
                            "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].propertyJPath",
                            "in": "[union(array('Severity'),if(equals(parameters('alertName'), ''), array('Version'), array('AlertDisplayName')))]"
                        },
                        {
                            "count": {
                                "name": "alertSeverity",
                                "value": "[parameters('alertSeverities')]",
                                "where": {
                                    "count": {
                                        "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*]",
                                        "where": {
                                            "allOf": [
                                                {
                                                    "equals": "Severity",
                                                    "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].propertyJPath"
                                                },
                                                {
                                                    "equals": "[current('alertSeverity')]",
                                                    "field": "Microsoft.Security/automations/sources[*].ruleSets[*].rules[*].expectedValue"
                                                }
                                            ]
                                        }
                                    },
                                    "equals": 1
                                }
                            },
                            "equals": "[length(parameters('alertSeverities'))]"
                        }
                    ]
                },
                "existenceScope": "resourcegroup",
                "name": "[parameters('automationName')]",
                "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                ],
                "type": "Microsoft.Security/automations"
            },
            "effect": "deployIfNotExists"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}