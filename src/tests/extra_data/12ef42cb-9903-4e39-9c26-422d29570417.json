{
    "description": "Manage your organizational compliance requirements by specifying whether a certificate lifetime action is triggered at a specific percentage of its lifetime or at a certain number of days prior to its expiration.",
    "displayName": "Certificates should have the specified lifetime action triggers",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/12ef42cb-9903-4e39-9c26-422d29570417",
    "metadata": {
        "category": "Key Vault",
        "version": "2.1.0"
    },
    "mode": "Microsoft.KeyVault.Data",
    "name": "12ef42cb-9903-4e39-9c26-422d29570417",
    "parameters": {
        "effect": {
            "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
            ],
            "defaultValue": "Audit",
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect",
                "strongType": null
            },
            "type": "String"
        },
        "maximumPercentageLife": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Enter the percentage of lifetime of the certificate when you want to trigger the policy action. For example, to trigger a policy action at 80% of the certificate's valid life, enter '80'.",
                "displayName": "The maximum lifetime percentage",
                "strongType": null
            },
            "type": "Integer"
        },
        "minimumDaysBeforeExpiry": {
            "allowedValues": null,
            "defaultValue": null,
            "metadata": {
                "additionalProperties": null,
                "assignPermissions": null,
                "description": "Enter the days before expiration of the certificate when you want to trigger the policy action. For example, to trigger a policy action 90 days before the certificate's expiration, enter '90'.",
                "displayName": "The minimum days before expiry",
                "strongType": null
            },
            "type": "Integer"
        }
    },
    "policyRule": {
        "if": {
            "allOf": [
                {
                    "equals": "Microsoft.KeyVault.Data/vaults/certificates",
                    "field": "type"
                },
                {
                    "anyOf": [
                        {
                            "allOf": [
                                {
                                    "exists": true,
                                    "field": "Microsoft.KeyVault.Data/vaults/certificates/lifetimeAction.daysBeforeExpiry"
                                },
                                {
                                    "field": "Microsoft.KeyVault.Data/vaults/certificates/lifetimeAction.daysBeforeExpiry",
                                    "less": "[parameters('minimumDaysBeforeExpiry')]"
                                }
                            ]
                        },
                        {
                            "allOf": [
                                {
                                    "exists": true,
                                    "field": "Microsoft.KeyVault.Data/vaults/certificates/lifetimeAction.lifetimePercentage"
                                },
                                {
                                    "field": "Microsoft.KeyVault.Data/vaults/certificates/lifetimeAction.lifetimePercentage",
                                    "greater": "[parameters('maximumPercentageLife')]"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "then": {
            "effect": "[parameters('effect')]"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}