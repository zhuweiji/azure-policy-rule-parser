{
    "description": "Encrypting OS and data disks using customer-managed keys provides more control and greater flexibility in key management. This is a common requirement in many regulatory and industry compliance standards.",
    "displayName": "Both operating systems and data disks in Azure Kubernetes Service clusters should be encrypted by customer-managed keys",
    "id": "/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67",
    "metadata": {
        "category": "Kubernetes",
        "version": "1.0.1"
    },
    "mode": "Indexed",
    "name": "7d7be79c-23ba-4033-84dd-45e2a5ccdd67",
    "parameters": {
        "effect": {
            "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
            ],
            "defaultValue": "Audit",
            "metadata": {
                "assignPermissions": null,
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true,
                "strongType": null
            },
            "type": "String"
        }
    },
    "policyRule": {
        "if": {
            "allOf": [
                {
                    "equals": "Microsoft.ContainerService/managedClusters",
                    "field": "type"
                },
                {
                    "anyOf": [
                        {
                            "exists": "False",
                            "field": "Microsoft.ContainerService/managedClusters/diskEncryptionSetID"
                        },
                        {
                            "equals": "",
                            "field": "Microsoft.ContainerService/managedClusters/diskEncryptionSetID"
                        }
                    ]
                }
            ]
        },
        "then": {
            "effect": "[parameters('effect')]"
        }
    },
    "policyType": "BuiltIn",
    "systemData": null,
    "type": "Microsoft.Authorization/policyDefinitions"
}